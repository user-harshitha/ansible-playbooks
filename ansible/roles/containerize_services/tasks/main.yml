- name: Gather only hardware-related facts
  ansible.builtin.setup:
    gather_subset:
      - hardware
- name: Calculate memory allocations
  set_fact:
    total_mem_mb: "{{ ansible_memtotal_mb | int }}"
    tomcat_memory_mb: "{{ (ansible_memtotal_mb * 0.5) | int }}"
    mysql_memory_mb: "{{ (ansible_memtotal_mb * 0.25) | int }}"
    php_memory_mb: "{{ (ansible_memtotal_mb * 0.10) | int }}"

- name: Format memory strings
  set_fact:
    tomcat_memory_str: "{{ tomcat_memory_mb }}m"
    mysql_memory_str: "{{ mysql_memory_mb }}M"
    php_memory_str: "{{ php_memory_mb }}m"

- name: Create .env file with calculated memory limits
  copy:
    dest: /app/docker/.env.j2
    content: |
      TOMCAT_IMAGE={{ tomcat_image }}
      PHP_IMAGE={{ php_image }}
      MYSQL_IMAGE={{ mysql_image}}
      TOMCAT_MEMORY={{ tomcat_memory_str }}
      MYSQL_MEMORY={{ mysql_memory_str }}
      PHP_MEMORY={{ php_memory_str }}
    mode: '0644'
- name: Ensure the /app/docker directory exists
  file:
    path: /app/docker
    state: directory
    mode: '0755'
- name: Update docker folder with docker-compose file
  template:
    src: containerized-services/docker-compose.yml.j2
    dest: /app/docker/docker-compose.yml
    mode: '0644'
- name: Ensure the /app/services/mysql-8.0/config/ directory exists
  file:
    path: /app/services/mysql-8.0/config/
    state: directory
    mode: '0755'
- name: Update mysql folder with mysqld.cnf file
  template:
    src: containerized-services/mysql-8.0/mysqld.cnf.j2
    dest: /app/services/mysql-8.0/config/mysqld.cnf
    mode: '0644'
- name: Ensure the /app/services/php-8.3/ directory exists
  file:
    path: /app/services/php-8.3/
    state: directory
    mode: '0755'
- name: 'Recursively copy PHP folder with cli, fpm config files'
  template:
    src: containerized-services/php-8.3
    dest: /app/services/php-8.3
    mode: '0755'
    directory_mode: '0755'
    remote_src: no
    owner: root
    group: root
    recurse: yes




